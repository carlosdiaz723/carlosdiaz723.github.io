@page "/newsletters/{year:int}/{month}"

@using System.Reflection
@using Microsoft.AspNetCore.Components
@using static NClubGA.Models.NewslettersUtil

@if (_newsletterComponentType != null)
{
    <div class="newsletter-container">
        <PageTitle>@_monthFormatted @Year Newsletter</PageTitle>
        <DynamicComponent Type="_newsletterComponentType" Parameters="_parameters"/>
    </div>
}
else if (_legacyNewsletter)
{
    <p>
        The newsletter for @_monthFormatted @Year is available as a PDF. Redirecting...
    </p>
}
else    
{
    <p>
        Newsletter not found for @_monthFormatted @Year.
    </p>
}

@code {
    [Parameter] public int Year { get; set; }
    [Parameter] required public string Month { get; set; }
    [Inject] private NavigationManager Navigation { get; set; }
    private string _monthFormatted;
    private bool _legacyNewsletter = false;

    private Type? _newsletterComponentType;
    private Dictionary<string, object> _parameters = default!;
    protected override void OnInitialized()
    {
        _monthFormatted = char.ToUpper(Month[0]) + Month.Substring(1).ToLower();
        _legacyNewsletter = DetermineIfLegacy(Year, _monthFormatted);
        
        if (_legacyNewsletter)
        {
            Navigation.NavigateTo($"legacy-newsletters/{Year}/{_monthFormatted}.pdf", forceLoad: true);
            return;
        }

        string _typeName = $"NClubGA.Components.Newsletters._{Year}.{_monthFormatted}";
        _newsletterComponentType = Assembly.GetExecutingAssembly().GetType(_typeName);
        if (_newsletterComponentType != null)
        {
            _parameters = new Dictionary<string, object>
            {
                { "Year", Year },
                { "Month", _monthFormatted }
            };
        }
    }
}
