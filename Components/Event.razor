
<div class="event">
    <div class="title">
        @Title
    </div>
    <div class="highlights">
        <div class="left">
            <div class="highlight">
                @if (EndDate.HasValue && StartDate.Date == EndDate.Value.Date)
                {
                    <div class="label">
                        WHEN:
                    </div>
                    <div class="value">
                        @StartAndEndSameDay().Split("/")[0]
                        <br/>
                        @StartAndEndSameDay().Split("/")[1]
                    </div>
                }
                else if (EndDate.HasValue)
                {
                    <div class="label">
                        FROM:
                    </div>
                    <div class="value">
                        @($"{StartDate.Day}{GetDaySuffix(StartDate.Day)} of {StartDate.ToString("MMMM, h:mm tt")}")
                    </div>
                    <div class="label">
                        UNTIL:
                    </div>
                    <div class="value">
                        @($"{EndDate.Value.Day}{GetDaySuffix(EndDate.Value.Day)} of {EndDate.Value.ToString("MMMM, h:mm tt")}")
                    </div>
                }
                else
                {
                    @* just a start time *@
                    <div class="label">
                        WHEN:
                    </div>
                    <div class="value">
                        @($"{StartDate.Day}{GetDaySuffix(StartDate.Day)} of {StartDate.ToString("MMMM, h:mm tt")}")
                    </div>
                }
            </div>
            <div class="highlight">
                <div class="label">
                    WHERE:
                </div>
                <div class="value">
                    <a href="@LocationURL">@LocationName</a>
                    <br/>
                    @AddressLine1
                    <br/>
                    @AddressLine2
                </div>
            </div>
            <div class="highlight">
                <div class="label">
                    COST:
                </div>
                <div class="value cost">
                    @Cost
                </div>
            </div>
        </div>
        <div class="right">
            <img class="main-event-image" src="@MainImageUrl"/>
        </div>
    </div>
    <div class="details">
        @ChildContent
    </div>
    <div class="links">
        @if(!string.IsNullOrWhiteSpace(FacebookEventUrl))
        {
            <a class="link" href="@FacebookEventUrl">Facebook Event</a>
        }
        @if(OtherLinks != null)
        {
            foreach (var link in OtherLinks)
            {
                <a class="link" href="@link.Value">@link.Key</a>
            }
        }
    </div>
</div

@code
{
    [Parameter] required public string Title { get; set; }
    [Parameter] required public DateTime StartDate { get; set; }
    [Parameter] public DateTime? EndDate { get; set; }
    [Parameter] required public string LocationName { get; set; }
    [Parameter] public string? LocationURL { get; set; }
    [Parameter] required public string AddressLine1 { get; set; }
    [Parameter] required public string AddressLine2 { get; set; }
    [Parameter] required public string Cost { get; set; }
    [Parameter] required public RenderFragment ChildContent { get; set; }
    [Parameter] public string? MainImageUrl { get; set; }
    [Parameter] public string? FacebookEventUrl { get; set; }

    [Parameter] public Dictionary<string, string> OtherLinks { get; set; }


    public string StartAndEndSameDay()
    {
        string day = StartDate.Day.ToString();
        string suffix = GetDaySuffix(StartDate.Day);
        
        string result = StartDate.ToString("MMMM ") + day + suffix + StartDate.ToString(", yyyy / h:mm tt");
        
        if (EndDate.HasValue)
        {
            result += " - " + EndDate.Value.ToString("h:mm tt");
        }
        
        return result;
    }
    public static string GetDaySuffix(int day)
    {
        if (day >= 11 && day <= 13) return "th";
        
        switch (day % 10)
        {
            case 1: return "st";
            case 2: return "nd";
            case 3: return "rd";
            default: return "th";
        }
    }
}